swagger: "2.0"
info:
  version: "1.0"
  title: Gym
  contact: {}
host: gym.stack.co.id
basePath: /
securityDefinitions: {}
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /member:
    get:
      summary: Get User
      tags:
        - Member
      operationId: GetUser
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/GetUser1"
          examples:
            application/json:
              code: 401
              message: token expired
              result: null
        "200":
          description: OK
          schema:
            $ref: "#/definitions/GetUser2"
          examples:
            application/json:
              code: 200
              message: Success
              result:
                members:
                  - id: 1
                    name: Abdul Kholiq
                    email: kholiqdev@icloud.com
                    created_at: 2022-06-12T20:25:38Z
                    updated_at: 2022-06-12T20:25:38Z
                  - id: 3
                    name: Abdul Kholiq
                    email: kholiqdev12@icloud.com
                    created_at: 2022-06-15T12:12:52Z
                    updated_at: 2022-06-15T12:12:52Z
                  - id: 5
                    name: Maharani
                    email: rani@gmail.com
                    created_at: 2022-06-29T16:52:09Z
                    updated_at: 2022-06-29T16:52:09Z
  /member/{id}:
    delete:
      summary: Delete Member
      tags:
        - Member
      operationId: DeleteMember
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: "Member id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: Success Delete
          schema:
            $ref: "#/definitions/DeleteMember1"
        "400":
          description: Bad Response
          schema:
            $ref: "#/definitions/DeleteMember2"
  /member/auth/register:
    post:
      summary: Register
      tags:
        - Member
      operationId: Register
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/RegisterRequest"
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/Register1"
          examples:
            application/json:
              code: 400
              message: "Error 1062: Duplicate entry 'kholiqdev@icloud.com' for key 'members.email'"
              result: null
        "201":
          description: Created
          schema:
            $ref: "#/definitions/Register2"
          examples:
            application/json:
              code: 201
              message: Success
              result:
                id: 5
                name: Maharani
                email: rani@gmail.com
                created_at: 2022-06-29T16:52:08.543Z
                updated_at: 2022-06-29T16:52:08.543Z

  /member/auth/login:
    post:
      summary: Login
      tags:
        - Member
      operationId: Login
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/LoginRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Login"
          examples:
            application/json:
              code: 200
              message: Success
              result:
                type: Bearer
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY1Mjg1NTIsImlhdCI6MTY1NjUyMTM1MiwiaWQiOjEsIm5hbWUiOiJBYmR1bCBLaG9saXEiLCJyb2xlIjoibWVtYmVyIiwidG9rZW5fdHlwZSI6ImFjY2Vzc190b2tlbiJ9.x1GKs3VvxfdOeTOHJRsHYU-aQDOpG7JfUcZkLvAMO3E
                refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY1Mjg1NTIsImlhdCI6MTY1NjUyMTM1MiwiaWQiOjEsIm5hbWUiOiJBYmR1bCBLaG9saXEiLCJyb2xlIjoibWVtYmVyIiwidG9rZW5fdHlwZSI6InJlZnJlc2hfdG9rZW4ifQ.1yhQIErbmzZSnjLuNTZ0KC1kBZ3ay-TShwmd7sXpeCQ
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Login2"
          examples:
            application/json:
              code: 401
              message: record not found
              result: null
          headers: {}
      security: []
  /member/auth/refresh:
    post:
      summary: Refresh
      tags:
        - Member
      operationId: Refresh
      deprecated: false
      produces:
        - application/json
        - application/json; charset=UTF-8
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Refresh"
          examples:
            application/json:
              code: 200
              message: Success
              result:
                type: Bearer
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY1Mjg5NTMsImlhdCI6MTY1NjUyMTc1MywiaWQiOjEsIm5hbWUiOiJBYmR1bCBLaG9saXEiLCJyb2xlIjoibWVtYmVyIiwidG9rZW5fdHlwZSI6ImFjY2Vzc190b2tlbiJ9.j_TTm4xG_RJZBWhEEDcPz-LwXgN2kRQyX6G3YKffxnI
                refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY1Mjg5NTMsImlhdCI6MTY1NjUyMTc1MywiaWQiOjEsIm5hbWUiOiJBYmR1bCBLaG9saXEiLCJyb2xlIjoibWVtYmVyIiwidG9rZW5fdHlwZSI6InJlZnJlc2hfdG9rZW4ifQ.PSrOY7sjIz3VWpNg9mrfzcylq416I43wB85YVsTLlIA
          headers: {}
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Refresh2"
          examples:
            application/json; charset=UTF-8:
              message: invalid or expired jwt
          headers: {}
  /user/5:
    get:
      summary: Detail
      tags:
        - Member
      operationId: Detail
      deprecated: false
      produces:
        - application/json; charset=UTF-8
      parameters: []
      responses:
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/Detail1"
          examples:
            application/json; charset=UTF-8:
              message: Not Found
      security: []
  /member/join:
    post:
      summary: Join
      tags:
        - Member
      operationId: Join
      deprecated: false
      produces:
        - application/json; charset=UTF-8
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/JoinRequest"
      responses:
        "405":
          description: Method Not Allowed
          schema:
            $ref: "#/definitions/Join1"
          examples:
            application/json; charset=UTF-8:
              message: Method Not Allowed
  /member/detail/{id}:
    put:
      summary: Update Member Detail
      tags:
        - Member
      operationId: UpdateMemberDetail
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: id
          in: "path"
          description: "Id that need to be updated"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Updated Member"
          required: true
          schema:
            $ref: "#/definitions/MemberRequest"
      responses:
        "200":
          description: Success Update
          schema:
            $ref: "#/definitions/UpdateMember1"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/UpdateMember2"
  /member/join/history:
    get:
      summary: Join History
      tags:
        - Member
      operationId: JoinHistory
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/JoinHistory1"
          examples:
            application/json:
              code: 400
              message: 'strconv.Atoi: parsing "join/history": invalid syntax'
              result: null
  /admin/user/list:
    get:
      summary: User List
      tags:
        - User
      operationId: UserList
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/userlist1"
          examples:
            application/json:
              code: 401
              message: token expired
              result: null
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/userlist1"
          examples:
            application/json:
              code: 400
              message: 'strconv.Atoi: parsing "user/list": invalid syntax'
              result: null
  /admin/list:
    get:
      summary: Get Admin
      tags:
        - Admin
      operationId: GetAdmin
      deprecated: false
      produces:
        - application/json
        - application/json; charset=UTF-8
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/GetAdmin"
          examples:
            application/json:
              code: 200
              message: Success
              result:
                admins:
                  - id: 1
                    name: Admin
                    phone: "089647583033"
                    email: admin@mail.com
                    created_at: 2022-06-12T20:14:28Z
                    updated_at: 2022-06-12T20:14:28Z
                  - id: 2
                    name: Admin
                    phone: "089647583033"
                    email: admin12@mail.com
                    created_at: 2022-06-15T12:13:52Z
                    updated_at: 2022-06-15T12:13:52Z
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/GetAdmin2"
          examples:
            application/json; charset=UTF-8:
              message: invalid or expired jwt
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/GetAdmin2"
          examples:
            application/json; charset=UTF-8:
              message: missing or malformed jwt
  /admin/member-type/create:
    post:
      summary: Create Member Type
      tags:
        - Admin
      operationId: CreateMemberType
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/CreateMemberTypeRequest"
      responses:
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/CreateMemberType1"
          examples:
            application/json:
              code: 401
              message: token expired
              result: null
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CreateMemberType2"
          examples:
            application/json:
              code: 201
              message: Success
              result:
                id: 2
                name: Free
                description: Access Free Ccontent
                price: 100000
                created_at: 2022-06-29T17:01:51.012Z
                updated_at: 2022-06-29T17:01:51.012Z
  /admin/auth/login:
    post:
      summary: Login
      tags:
        - Admin
      operationId: PostLogin
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/LoginRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Login"
          examples:
            application/json:
              code: 200
              message: Success
              result:
                type: Bearer
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY1MjkyNDgsImlhdCI6MTY1NjUyMjA0OCwiaWQiOjEsIm5hbWUiOiJBZG1pbiIsInJvbGUiOiJhZG1pbiIsInRva2VuX3R5cGUiOiJhY2Nlc3NfdG9rZW4ifQ.9r8nNMpnqgX7huhj7sW_MZieEBVPECHFDOfPwCMMPS0
                refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY1MjkyNDgsImlhdCI6MTY1NjUyMjA0OCwiaWQiOjEsIm5hbWUiOiJBZG1pbiIsInJvbGUiOiJhZG1pbiIsInRva2VuX3R5cGUiOiJyZWZyZXNoX3Rva2VuIn0.qbA1oRZVYQ9WMGXTISjNmuzGzBRUhYodWSUTE2OICZI
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Login2"
          examples:
            application/json:
              code: 401
              message: record not found
              result: null
      security: []
  /admin/1:
    get:
      summary: Detail
      tags:
        - Admin
      operationId: GetDetail
      deprecated: false
      produces:
        - application/json; charset=UTF-8
      parameters: []
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/Detail1"
          examples:
            application/json; charset=UTF-8:
              message: missing or malformed jwt
      security: []
  /admin/class/create:
    post:
      summary: Create Class
      tags:
        - Admin
      operationId: CreateClass
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/CreateClassRequest"
      responses:
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/CreateClass1"
          examples:
            application/json:
              code: 401
              message: token expired
              result: null
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/CreateClass1"
          examples:
            application/json:
              code: 400
              message: "Error 1452: Cannot add or update a child row: a foreign key constraint fails (`gym`.`classes`, CONSTRAINT `fk_classes_class_category` FOREIGN KEY (`class_category_id`) REFERENCES `class_categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)"
              result: null
  /admin/class-category/create:
    post:
      summary: Create Class Category
      tags:
        - Admin
      operationId: CreateClassCategory
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/CreateClassCategoryRequest"
      responses:
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/CreateClassCategory1"
          examples:
            application/json:
              code: 401
              message: token expired
              result: null
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CreateClassCategory2"
          examples:
            application/json:
              code: 201
              message: Success
              result:
                id: 1
                name: push down
                slug: push-down
  /admin/create:
    post:
      summary: Create New Admin
      tags:
        - Admin
      operationId: CreateNewAdmin
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/CreateNewAdminRequest"
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CreateNewAdmin"
          examples:
            application/json:
              code: 201
              message: Success
              result:
                id: 3
                name: Admin2
                phone: "0896287363"
                email: admin2@mail.com
                created_at: 2022-06-29T17:11:26.185Z
                updated_at: 2022-06-29T17:11:26.185Z
      security: []
  /admin/class-category:
    get:
      summary: Get Class Category
      tags:
        - Admin
      operationId: GetClassCategory
      deprecated: false
      produces:
        - application/json
        - application/json; charset=UTF-8
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/GetClassCategory1"
          examples:
            application/json:
              code: 401
              message: token expired
              result: null
            application/json; charset=UTF-8:
              message: invalid or expired jwt
        "200":
          description: OK
          schema:
            $ref: "#/definitions/GetClassCategory2"
          examples:
            application/json:
              code: 200
              message: Success
              result:
                class_category:
                  data:
                    - id: 1
                      name: push down
                      slug: push-down
                  page: 1
                  page_size: 10
                  sort: Id desc
                  total_page: 1
                  total_rows: 1
  /admin/{id}:
    delete:
      summary: Delete Admin
      tags:
        - Admin
      operationId: DeleteAdmin
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: "Admin id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: Success Delete
          schema:
            $ref: "#/definitions/DeleteAdmin1"
        "400":
          description: Bad Response
          schema:
            $ref: "#/definitions/DeleteAdmin2"
    put:
      summary: Update Admin
      tags:
        - Admin
      operationId: UpdateAdmin
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: id
          in: "path"
          description: "Id that need to be updated"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Updated Admin"
          required: true
          schema:
            $ref: "#/definitions/AdminRequest"
      responses:
        "200":
          description: Success Update
          schema:
            $ref: "#/definitions/UpdateAdmin1"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/UpdateAdmin2"
  /class:
    get:
      summary: Get Class
      tags:
        - Class
      operationId: GetClass
      deprecated: false
      produces:
        - application/json
        - application/json; charset=UTF-8
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/GetClass"
          examples:
            application/json:
              code: 200
              message: Success
              result:
                classes:
                  data:
                    - class_category_id: 1
                      trainer_name: Sofyan
                      id: 4
                      name: Class 3
                      description: Halos
                      price: 10000
                      meet_link: http://google.com
                      image: http://google.com
                      date: 2022-06-18T00:00:00Z
                      start_time: 09:30:00
                      end_time: 11:00:00
                      is_offline: true
                      category_name: push down
                      created_at: 2022-07-11T00:52:56Z
                      updated_at: 2022-07-11T00:52:56Z
                  page: 1
                  page_size: 10
                  sort: Id desc
                  total_page: 1
                  total_rows: 1
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/GetClass2"
          examples:
            application/json; charset=UTF-8:
              message: invalid or expired jwt
  /class/{id}:
    delete:
      summary: delete class
      tags:
        - Class
      operationId: deleteclass
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: "class id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: Success Delete
          schema:
            $ref: "#/definitions/Deleteclass1"
        "400":
          description: Bad Response
          schema:
            $ref: "#/definitions/Deleteclass2"
    put:
      summary: Update Class
      tags:
        - Class
      operationId: UpdateClass
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: "class id to update"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: Success Delete
          schema:
            $ref: "#/definitions/Updateclass1"
        "400":
          description: Bad Response
          schema:
            $ref: "#/definitions/Updateclass2"

  /class/order:
    post:
      summary: Order
      tags:
        - ClassBooking
      operationId: Order
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/OrderRequest"
      responses:
        "200":
          description: ""
          headers: {}
  /class/order/history:
    get:
      summary: Order History
      tags:
        - ClassBooking
      operationId: OrderHistory
      deprecated: false
      produces:
        - application/json
    parameters:
      - name: Authorization
        in: header
        required: false
        default: Bearer {token}
        type: string
      - name: page
        in: query
        required: true
        type: integer
        format: int32
        description: ""
      - name: pageSize
        in: query
        required: true
        type: integer
        format: int32
        description: ""
      - name: sortBy
        in: query
        required: true
        type: string
        description: ""
      - name: sortDesc
        in: query
        required: true
        type: integer
        format: int32
        description: ""
        responses:
          "401":
          description: Unauthorized
          schema:
          $ref: "#/definitions/OrderHistory1"
          examples:
          application/json:
            code: 401
            message: token expired
            result: null
          headers: {}

definitions:
  GetUser1:
    title: GetUser1
    example:
      code: 401
      message: token expired
      result: null
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        type: string
    required:
      - code
      - message
      - result
  GetUser2:
    title: GetUser2
    example:
      code: 200
      message: Success
      result:
        members:
          - id: 1
            name: Abdul Kholiq
            email: kholiqdev@icloud.com
            created_at: 2022-06-12T20:25:38Z
            updated_at: 2022-06-12T20:25:38Z
          - id: 3
            name: Abdul Kholiq
            email: kholiqdev12@icloud.com
            created_at: 2022-06-15T12:12:52Z
            updated_at: 2022-06-15T12:12:52Z
          - id: 5
            name: Maharani
            email: rani@gmail.com
            created_at: 2022-06-29T16:52:09Z
            updated_at: 2022-06-29T16:52:09Z
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        $ref: "#/definitions/Result"
    required:
      - code
      - message
      - result
  DeleteMember1:
    type: object
    properties:
      message:
        type: string
        example: Success Delete Member
      rescode:
        type: number
        example: 200
  DeleteMember2:
    type: object
    properties:
      message:
        type: string
        example: Bad Request
      rescode:
        type: number
        example: 400
  Result:
    title: Result
    example:
      members:
        - id: 1
          name: Abdul Kholiq
          email: kholiqdev@icloud.com
          created_at: 2022-06-12T20:25:38Z
          updated_at: 2022-06-12T20:25:38Z
        - id: 3
          name: Abdul Kholiq
          email: kholiqdev12@icloud.com
          created_at: 2022-06-15T12:12:52Z
          updated_at: 2022-06-15T12:12:52Z
        - id: 5
          name: Maharani
          email: rani@gmail.com
          created_at: 2022-06-29T16:52:09Z
          updated_at: 2022-06-29T16:52:09Z
    type: object
    properties:
      members:
        type: array
        items:
          $ref: "#/definitions/Member"
    required:
      - members
  Member:
    title: Member
    example:
      id: 1
      name: Abdul Kholiq
      email: kholiqdev@icloud.com
      created_at: 2022-06-12T20:25:38Z
      updated_at: 2022-06-12T20:25:38Z
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      email:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    required:
      - id
      - name
      - email
      - created_at
      - updated_at

  JoinHistory1:
    title: JoinHistory1
    example:
      code: 400
      message: 'strconv.Atoi: parsing "join/history": invalid syntax'
      result: null
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        type: string
    required:
      - code
      - message
      - result

  MemberRequest:
    type: object
    properties:
      name:
        type: string
        example: Name
      phone:
        type: number
        example: 0987654435678
      email:
        type: string
        example: email@gmail.com

  UpdateMember1:
    type: object
    properties:
      message:
        type: string
        example: Success Update Member
      rescode:
        type: number
        example: 200
  UpdateMember2:
    type: object
    properties:
      message:
        type: string
        example: Bad Request
      rescode:
        type: number
        example: 400

  RegisterRequest:
    title: RegisterRequest
    example:
      name: Maharani
      phone: "08781928349"
      email: rani@gmail.com
      password: password123
    type: object
    properties:
      name:
        type: string
      phone:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - name
      - phone
      - email
      - password
  Register1:
    title: Register1
    example:
      code: 400
      message: "Error 1062: Duplicate entry 'kholiqdev@icloud.com' for key 'members.email'"
      result: null
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        type: string
    required:
      - code
      - message
      - result
  Register2:
    title: Register2
    example:
      code: 201
      message: Success
      result:
        id: 5
        name: Maharani
        email: rani@gmail.com
        created_at: 2022-06-29T16:52:08.543Z
        updated_at: 2022-06-29T16:52:08.543Z
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        $ref: "#/definitions/Result1"
    required:
      - code
      - message
      - result
  Result1:
    title: Result1
    example:
      id: 5
      name: Maharani
      email: rani@gmail.com
      created_at: 2022-06-29T16:52:08.543Z
      updated_at: 2022-06-29T16:52:08.543Z
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      email:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    required:
      - id
      - name
      - email
      - created_at
      - updated_at
  LoginRequest:
    title: LoginRequest
    example:
      email: kholiqdev@icloud.com
      password: password
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
  Login:
    title: Login
    example:
      code: 200
      message: Success
      result:
        type: Bearer
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY1Mjg1NTIsImlhdCI6MTY1NjUyMTM1MiwiaWQiOjEsIm5hbWUiOiJBYmR1bCBLaG9saXEiLCJyb2xlIjoibWVtYmVyIiwidG9rZW5fdHlwZSI6ImFjY2Vzc190b2tlbiJ9.x1GKs3VvxfdOeTOHJRsHYU-aQDOpG7JfUcZkLvAMO3E
        refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY1Mjg1NTIsImlhdCI6MTY1NjUyMTM1MiwiaWQiOjEsIm5hbWUiOiJBYmR1bCBLaG9saXEiLCJyb2xlIjoibWVtYmVyIiwidG9rZW5fdHlwZSI6InJlZnJlc2hfdG9rZW4ifQ.1yhQIErbmzZSnjLuNTZ0KC1kBZ3ay-TShwmd7sXpeCQ
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        $ref: "#/definitions/Result2"
    required:
      - code
      - message
      - result
  Result2:
    title: Result2
    example:
      type: Bearer
      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY1Mjg1NTIsImlhdCI6MTY1NjUyMTM1MiwiaWQiOjEsIm5hbWUiOiJBYmR1bCBLaG9saXEiLCJyb2xlIjoibWVtYmVyIiwidG9rZW5fdHlwZSI6ImFjY2Vzc190b2tlbiJ9.x1GKs3VvxfdOeTOHJRsHYU-aQDOpG7JfUcZkLvAMO3E
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY1Mjg1NTIsImlhdCI6MTY1NjUyMTM1MiwiaWQiOjEsIm5hbWUiOiJBYmR1bCBLaG9saXEiLCJyb2xlIjoibWVtYmVyIiwidG9rZW5fdHlwZSI6InJlZnJlc2hfdG9rZW4ifQ.1yhQIErbmzZSnjLuNTZ0KC1kBZ3ay-TShwmd7sXpeCQ
    type: object
    properties:
      type:
        type: string
      token:
        type: string
      refresh_token:
        type: string
    required:
      - type
      - token
      - refresh_token
  Login2:
    title: Login2
    example:
      code: 401
      message: record not found
      result: null
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        type: string
    required:
      - code
      - message
      - result
  Refresh:
    title: Refresh
    example:
      code: 200
      message: Success
      result:
        type: Bearer
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY1Mjg5NTMsImlhdCI6MTY1NjUyMTc1MywiaWQiOjEsIm5hbWUiOiJBYmR1bCBLaG9saXEiLCJyb2xlIjoibWVtYmVyIiwidG9rZW5fdHlwZSI6ImFjY2Vzc190b2tlbiJ9.j_TTm4xG_RJZBWhEEDcPz-LwXgN2kRQyX6G3YKffxnI
        refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTY1Mjg5NTMsImlhdCI6MTY1NjUyMTc1MywiaWQiOjEsIm5hbWUiOiJBYmR1bCBLaG9saXEiLCJyb2xlIjoibWVtYmVyIiwidG9rZW5fdHlwZSI6InJlZnJlc2hfdG9rZW4ifQ.PSrOY7sjIz3VWpNg9mrfzcylq416I43wB85YVsTLlIA
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        $ref: "#/definitions/Result2"
    required:
      - code
      - message
      - result
  Refresh2:
    title: Refresh2
    example:
      message: invalid or expired jwt
    type: object
    properties:
      message:
        type: string
    required:
      - message
  Detail1:
    title: Detail1
    example:
      message: Not Found
    type: object
    properties:
      message:
        type: string
    required:
      - message
  JoinRequest:
    title: JoinRequest
    example:
      member_type_id: 1
      start_at: 2022-06-18
      nik: "350919191806999003"
      name: Abdul Kholiq
      gender: L
      address: jln ahmad yani 6 jember
      city: jember
      postal_code: "680137"
      email: kholiqdev@icloud.com
      phone: "0896475830303"
    type: object
    properties:
      member_type_id:
        type: integer
        format: int32
      start_at:
        type: string
      nik:
        type: string
      name:
        type: string
      gender:
        type: string
      address:
        type: string
      city:
        type: string
      postal_code:
        type: string
      email:
        type: string
      phone:
        type: string
    required:
      - member_type_id
      - start_at
      - nik
      - name
      - gender
      - address
      - city
      - postal_code
      - email
      - phone
  Join1:
    title: Join1
    example:
      message: Method Not Allowed
    type: object
    properties:
      message:
        type: string
    required:
      - message

  UpdateAdmin1:
    type: object
    properties:
      message:
        type: string
        example: Success Update Member
      rescode:
        type: number
        example: 200
  UpdateAdmin2:
    type: object
    properties:
      message:
        type: string
        example: Bad Request
      rescode:
        type: number
        example: 400

  userlist1:
    title: userlist1
    example:
      code: 401
      message: token expired
      result: null
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        type: string
    required:
      - code
      - message
      - result
  GetAdmin:
    title: GetAdmin
    example:
      code: 200
      message: Success
      result:
        admins:
          - id: 1
            name: Admin
            phone: "089647583033"
            email: admin@mail.com
            created_at: 2022-06-12T20:14:28Z
            updated_at: 2022-06-12T20:14:28Z
          - id: 2
            name: Admin
            phone: "089647583033"
            email: admin12@mail.com
            created_at: 2022-06-15T12:13:52Z
            updated_at: 2022-06-15T12:13:52Z
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        $ref: "#/definitions/Result4"
    required:
      - code
      - message
      - result
  Result4:
    title: Result4
    example:
      admins:
        - id: 1
          name: Admin
          phone: "089647583033"
          email: admin@mail.com
          created_at: 2022-06-12T20:14:28Z
          updated_at: 2022-06-12T20:14:28Z
        - id: 2
          name: Admin
          phone: "089647583033"
          email: admin12@mail.com
          created_at: 2022-06-15T12:13:52Z
          updated_at: 2022-06-15T12:13:52Z
    type: object
    properties:
      admins:
        type: array
        items:
          $ref: "#/definitions/Admin"
    required:
      - admins
  Admin:
    title: Admin
    example:
      id: 1
      name: Admin
      phone: "089647583033"
      email: admin@mail.com
      created_at: 2022-06-12T20:14:28Z
      updated_at: 2022-06-12T20:14:28Z
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      phone:
        type: string
      email:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    required:
      - id
      - name
      - phone
      - email
      - created_at
      - updated_at
  GetAdmin2:
    title: GetAdmin2
    example:
      message: invalid or expired jwt
    type: object
    properties:
      message:
        type: string
    required:
      - message
  CreateMemberTypeRequest:
    title: CreateMemberTypeRequest
    example:
      name: Free
      description: Access Free Ccontent
      image: ""
      duration: 1
      price: 100000
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      image:
        type: string
      duration:
        type: integer
        format: int32
      price:
        type: integer
        format: int32
    required:
      - name
      - description
      - image
      - duration
      - price
  CreateMemberType1:
    title: CreateMemberType1
    example:
      code: 401
      message: token expired
      result: null
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        type: string
    required:
      - code
      - message
      - result
  CreateMemberType2:
    title: CreateMemberType2
    example:
      code: 201
      message: Success
      result:
        id: 2
        name: Free
        description: Access Free Ccontent
        price: 100000
        created_at: 2022-06-29T17:01:51.012Z
        updated_at: 2022-06-29T17:01:51.012Z
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        $ref: "#/definitions/Result5"
    required:
      - code
      - message
      - result
  Result5:
    title: Result5
    example:
      id: 2
      name: Free
      description: Access Free Ccontent
      price: 100000
      created_at: 2022-06-29T17:01:51.012Z
      updated_at: 2022-06-29T17:01:51.012Z
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      description:
        type: string
      price:
        type: integer
        format: int32
      created_at:
        type: string
      updated_at:
        type: string
    required:
      - id
      - name
      - description
      - price
      - created_at
      - updated_at
  CreateClassRequest:
    title: CreateClassRequest
    example:
      class_category_id: 3
      trainer_name: budi
      name: Class 5
      description: Haloss
      price: 980000
      meet_link: http://google.com
      category: push up
      image: http://google.com
      date: 2022-06-18
      start_time: 09:30:00
      end_time: 11:00:00
      trainer_id: 5
      is_offline: true
    type: object
    properties:
      class_category_id:
        type: integer
        format: int32
      trainer_name:
        type: string
      name:
        type: string
      description:
        type: string
      price:
        type: integer
        format: int32
      meet_link:
        type: string
      category:
        type: string
      image:
        type: string
      date:
        type: string
      start_time:
        type: string
      end_time:
        type: string
      trainer_id:
        type: integer
        format: int32
      is_offline:
        type: boolean
    required:
      - class_category_id
      - trainer_name
      - name
      - description
      - price
      - meet_link
      - category
      - image
      - date
      - start_time
      - end_time
      - trainer_id
      - is_offline
  CreateClass1:
    title: CreateClass1
    example:
      code: 401
      message: token expired
      result: null
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        type: string
    required:
      - code
      - message
      - result
  CreateClassCategoryRequest:
    title: CreateClassCategoryRequest
    example:
      name: push down
    type: object
    properties:
      name:
        type: string
    required:
      - name
  CreateClassCategory1:
    title: CreateClassCategory1
    example:
      code: 401
      message: token expired
      result: null
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        type: string
    required:
      - code
      - message
      - result
  CreateClassCategory2:
    title: CreateClassCategory2
    example:
      code: 201
      message: Success
      result:
        id: 1
        name: push down
        slug: push-down
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        $ref: "#/definitions/Result7"
    required:
      - code
      - message
      - result
  Result7:
    title: Result7
    example:
      id: 1
      name: push down
      slug: push-down
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      slug:
        type: string
    required:
      - id
      - name
      - slug
  CreateNewAdminRequest:
    title: CreateNewAdminRequest
    example:
      name: Admin
      phone: "089647583033"
      email: admin@mail.com
      password: password
    type: object
    properties:
      name:
        type: string
      phone:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - name
      - phone
      - email
      - password
  CreateNewAdmin:
    title: CreateNewAdmin
    example:
      code: 201
      message: Success
      result:
        id: 3
        name: Admin2
        phone: "0896287363"
        email: admin2@mail.com
        created_at: 2022-06-29T17:11:26.185Z
        updated_at: 2022-06-29T17:11:26.185Z
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        $ref: "#/definitions/Result8"
    required:
      - code
      - message
      - result
  Result8:
    title: Result8
    example:
      id: 3
      name: Admin2
      phone: "0896287363"
      email: admin2@mail.com
      created_at: 2022-06-29T17:11:26.185Z
      updated_at: 2022-06-29T17:11:26.185Z
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      phone:
        type: string
      email:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    required:
      - id
      - name
      - phone
      - email
      - created_at
      - updated_at
  GetClassCategory1:
    title: GetClassCategory1
    example:
      code: 401
      message: token expired
      result: null
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        type: string
    required:
      - code
      - message
      - result
  GetClassCategory2:
    title: GetClassCategory2
    example:
      code: 200
      message: Success
      result:
        class_category:
          data:
            - id: 1
              name: push down
              slug: push-down
          page: 1
          page_size: 10
          sort: Id desc
          total_page: 1
          total_rows: 1
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        $ref: "#/definitions/Result9"
    required:
      - code
      - message
      - result

  DeleteAdmin1:
    type: object
    properties:
      message:
        type: string
        example: Success Delete Admin
      rescode:
        type: number
        example: 200
  DeleteAdmin2:
    type: object
    properties:
      message:
        type: string
        example: Bad Request
      rescode:
        type: number
        example: 400

  AdminRequest:
    type: object
    properties:
      name:
        type: string
        example: Name
      phone:
        type: number
        example: 0987654435678
      email:
        type: string
        example: email@gmail.com

  Deleteclass1:
    type: object
    properties:
      message:
        type: string
        example: Success Delete admin
      rescode:
        type: number
        example: 200

  Deleteclass2:
    type: object
    properties:
      message:
        type: string
        example: Bad Request
      rescode:
        type: number
        example: 400

  Updateclass1:
    type: object
    properties:
      message:
        type: string
        example: Success Update Member
      rescode:
        type: number
        example: 200
  Updateclass2:
    type: object
    properties:
      message:
        type: string
        example: Bad Request
      rescode:
        type: number
        example: 400

  Result9:
    title: Result9
    example:
      class_category:
        data:
          - id: 1
            name: push down
            slug: push-down
        page: 1
        page_size: 10
        sort: Id desc
        total_page: 1
        total_rows: 1
    type: object
    properties:
      class_category:
        $ref: "#/definitions/ClassCategory"
    required:
      - class_category
  ClassCategory:
    title: ClassCategory
    example:
      data:
        - id: 1
          name: push down
          slug: push-down
      page: 1
      page_size: 10
      sort: Id desc
      total_page: 1
      total_rows: 1
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Datum"
      page:
        type: integer
        format: int32
      page_size:
        type: integer
        format: int32
      sort:
        type: string
      total_page:
        type: integer
        format: int32
      total_rows:
        type: integer
        format: int32
    required:
      - data
      - page
      - page_size
      - sort
      - total_page
      - total_rows
  Datum:
    title: Datum
    example:
      id: 1
      name: push down
      slug: push-down
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      slug:
        type: string
    required:
      - id
      - name
      - slug
  GetClassCategory4:
    title: GetClassCategory4
    example:
      message: invalid or expired jwt
    type: object
    properties:
      message:
        type: string
    required:
      - message
  GetClass:
    title: GetClass
    example:
      code: 200
      message: Success
      result:
        classes:
          data:
            - class_category_id: 1
              trainer_name: Sofyan
              id: 4
              name: Class 3
              description: Halos
              price: 10000
              meet_link: http://google.com
              image: http://google.com
              date: 2022-06-18T00:00:00Z
              start_time: 09:30:00
              end_time: 11:00:00
              is_offline: true
              category_name: push down
              created_at: 2022-07-11T00:52:56Z
              updated_at: 2022-07-11T00:52:56Z
          page: 1
          page_size: 10
          sort: Id desc
          total_page: 1
          total_rows: 1
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        $ref: "#/definitions/Result10"
    required:
      - code
      - message
      - result
  Result10:
    title: Result10
    example:
      classes:
        data:
          - class_category_id: 1
            trainer_name: Sofyan
            id: 4
            name: Class 3
            description: Halos
            price: 10000
            meet_link: http://google.com
            image: http://google.com
            date: 2022-06-18T00:00:00Z
            start_time: 09:30:00
            end_time: 11:00:00
            is_offline: true
            category_name: push down
            created_at: 2022-07-11T00:52:56Z
            updated_at: 2022-07-11T00:52:56Z
        page: 1
        page_size: 10
        sort: Id desc
        total_page: 1
        total_rows: 1
    type: object
    properties:
      classes:
        $ref: "#/definitions/Classes"
    required:
      - classes
  Classes:
    title: Classes
    example:
      data:
        - class_category_id: 1
          trainer_name: Sofyan
          id: 4
          name: Class 3
          description: Halos
          price: 10000
          meet_link: http://google.com
          image: http://google.com
          date: 2022-06-18T00:00:00Z
          start_time: 09:30:00
          end_time: 11:00:00
          is_offline: true
          category_name: push down
          created_at: 2022-07-11T00:52:56Z
          updated_at: 2022-07-11T00:52:56Z
      page: 1
      page_size: 10
      sort: Id desc
      total_page: 1
      total_rows: 1
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Datum1"
      page:
        type: integer
        format: int32
      page_size:
        type: integer
        format: int32
      sort:
        type: string
      total_page:
        type: integer
        format: int32
      total_rows:
        type: integer
        format: int32
    required:
      - data
      - page
      - page_size
      - sort
      - total_page
      - total_rows
  Datum1:
    title: Datum1
    example:
      class_category_id: 1
      trainer_name: Sofyan
      id: 4
      name: Class 3
      description: Halos
      price: 10000
      meet_link: http://google.com
      image: http://google.com
      date: 2022-06-18T00:00:00Z
      start_time: 09:30:00
      end_time: 11:00:00
      is_offline: true
      category_name: push down
      created_at: 2022-07-11T00:52:56Z
      updated_at: 2022-07-11T00:52:56Z
    type: object
    properties:
      class_category_id:
        type: integer
        format: int32
      trainer_name:
        type: string
      id:
        type: integer
        format: int32
      name:
        type: string
      description:
        type: string
      price:
        type: integer
        format: int32
      meet_link:
        type: string
      image:
        type: string
      date:
        type: string
      start_time:
        type: string
      end_time:
        type: string
      is_offline:
        type: boolean
      category_name:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    required:
      - class_category_id
      - trainer_name
      - id
      - name
      - description
      - price
      - meet_link
      - image
      - date
      - start_time
      - end_time
      - is_offline
      - category_name
      - created_at
      - updated_at
  OrderRequest:
    title: OrderRequest
    example:
      class_ids:
        - 1
      payment_method: BCA
      note: test
    type: object
    properties:
      class_ids:
        type: array
        items:
          type: integer
          format: int32
      payment_method:
        type: string
      note:
        type: string
    required:
      - class_ids
      - payment_method
      - note
  OrderHistory1:
    title: OrderHistory1
    example:
      code: 401
      message: token expired
      result: null
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      result:
        type: string
    required:
      - code
      - message
      - result
  GetClass2:
    title: GetClass2
    example:
      message: invalid or expired jwt
    type: object
    properties:
      message:
        type: string
    required:
      - message
security: []
tags:
  - name: Member
  - name: User
  - name: Admin
  - name: Class
  - name: ClassBooking
